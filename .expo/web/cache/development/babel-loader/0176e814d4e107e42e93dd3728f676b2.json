{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ssuarezs/Gridman/TPI-25/screens/tabs/ListaDet.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      puntos = _useState2[0],\n      setPuntos = _useState2[1];\n\n  var obtenerPuntos = function obtenerPuntos() {\n    var obtenidos, listaPuntos;\n    return _regeneratorRuntime.async(function obtenerPuntos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('Puntos'));\n\n          case 2:\n            obtenidos = _context.sent;\n            listaPuntos = JSON.parse(obtenidos);\n\n            if (listaPuntos !== null) {\n              setPuntos(listaPuntos);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var irLocacion = function irLocacion(item) {\n    navigation.navigate('verDeterm', {\n      location: item.coordinate\n    });\n  };\n\n  useEffect(function () {\n    obtenerPuntos();\n  }, [puntos]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Pagina del Listado\"), React.createElement(View, {\n    style: styles.containList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, puntos ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    style: styles.list,\n    data: puntos,\n    keyExtractor: function keyExtractor(x) {\n      return x.name;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n        style: styles.item,\n        onPress: function onPress() {\n          navigation.navigate('verDeterm', {\n            location: item.coordinate\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 2\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 2\n        }\n      }, item.name), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 2\n        }\n      }, \" \", item.coordinate.latitude), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 2\n        }\n      }, \" \", item.coordinate.longitude)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 2\n    }\n  })) : null));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fec',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 15\n  },\n  tabsNav: {\n    flex: 0.15\n  },\n  item: {\n    borderBottomWidth: 3,\n    borderColor: '#222'\n  },\n  list: {\n    alignSelf: 'stretch'\n  },\n  containList: {\n    alignSelf: 'stretch',\n    padding: 5,\n    borderRadius: 10,\n    margin: 10,\n    marginBottom: 100,\n    marginTop: 20,\n    borderColor: '#222',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["/home/ssuarezs/Gridman/TPI-25/screens/tabs/ListaDet.js"],"names":["React","useState","useEffect","AsyncStorage","navigation","puntos","setPuntos","obtenerPuntos","getItem","obtenidos","listaPuntos","JSON","parse","irLocacion","item","navigate","location","coordinate","styles","container","containList","list","x","name","latitude","longitude","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","tabsNav","borderBottomWidth","borderColor","alignSelf","padding","borderRadius","margin","marginBottom","marginTop","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\nimport { TouchableOpacity, AsyncStorage, FlatList } from 'react-native';\n\nexport default ({navigation}) => {\n\n  const [puntos, setPuntos] = useState([])\n\n  const obtenerPuntos = async () => {\n    const obtenidos = await AsyncStorage.getItem('Puntos')\n    const listaPuntos= JSON.parse(obtenidos)\n    if(listaPuntos !== null){\n      setPuntos(listaPuntos)\n    }\n  }\n\n  const irLocacion = (item) => {\n     navigation.navigate('verDeterm', {\n       location : item.coordinate \n     })\n  }\n\n  useEffect(() => {\n    obtenerPuntos()\n  }, [puntos])\n  \n  return (\n    <View style={styles.container}>\n      <Text>Pagina del Listado</Text>\n    <View style={styles.containList}>\n    {puntos ?\n      <>\n\t<FlatList \n      style={styles.list}\n      data={puntos} \n      keyExtractor={x => x.name}\n      renderItem={({item}) => \n\t<>\n\t<TouchableOpacity style={styles.item} onPress={() => { \n\t   navigation.navigate('verDeterm', {\n\t     location : item.coordinate \n\t   })\n\t}} >\n\t<Text>{item.name}</Text>\n\t<Text>\t{item.coordinate.latitude}</Text>\n\t<Text>\t{item.coordinate.longitude}</Text>\n\t</TouchableOpacity>\n\t</>\n      }\n\t/>\n      </>\n      :null \n    }\n    </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fec',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 15,\n  },\n  tabsNav: {\n    flex: 0.15,\n  },\n  item: {\n    borderBottomWidth: 3,\n    borderColor: '#222'\n  },\n  list: {\n    alignSelf: 'stretch',\n  },\n  containList: {  \n    alignSelf: 'stretch',\n    padding: 5,\n    borderRadius: 10,\n    margin: 10,\n    marginBottom: 100,\n    marginTop: 20,\n    borderColor:'#222',\n    borderWidth: 1,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}