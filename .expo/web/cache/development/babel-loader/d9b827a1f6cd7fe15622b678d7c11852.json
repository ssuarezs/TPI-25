{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ssuarezs/Gridman/TPI-25/screens/tabs/ListaDet.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      puntos = _useState2[0],\n      setPuntos = _useState2[1];\n\n  var obtenerPuntos = function obtenerPuntos() {\n    var obtenidos, listaPuntos;\n    return _regeneratorRuntime.async(function obtenerPuntos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('listaPuntos2'));\n\n          case 2:\n            obtenidos = _context.sent;\n            listaPuntos = JSON.parse(obtenidos);\n\n            if (listaPuntos !== null) {\n              setPuntos(listaPuntos);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(puntos);\n  useEffect(function () {\n    obtenerPuntos();\n  }, [puntos]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Pagina del Listado\"), puntos ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: puntos,\n    keyExtractor: function keyExtractor(x) {\n      return x.name;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 2\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 2\n        }\n      }, item.name), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 2\n        }\n      }, \" \", item.coordinate.latitude), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 2\n        }\n      }, \" \", item.coordinate.longitude));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 2\n    }\n  })) : null);\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/ssuarezs/Gridman/TPI-25/screens/tabs/ListaDet.js"],"names":["React","useState","useEffect","AsyncStorage","navigation","puntos","setPuntos","obtenerPuntos","getItem","obtenidos","listaPuntos","JSON","parse","console","log","styles","container","x","name","item","coordinate","latitude","longitude","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;SACmDC,Y;;AAEnD,gBAAe,gBAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAE/B,kBAA4BH,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIJ,YAAY,CAACK,OAAb,CAAqB,cAArB,CADJ;;AAAA;AACdC,YAAAA,SADc;AAEdC,YAAAA,WAFc,GAEDC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAFC;;AAGpB,gBAAGC,WAAW,KAAK,IAAnB,EAAwB;AACtBJ,cAAAA,SAAS,CAACI,WAAD,CAAT;AACD;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AASAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAECX,MAAM,GACL,0CACL,oBAAC,QAAD;AACK,IAAA,IAAI,EAAEA,MADX;AAEK,IAAA,YAAY,EAAE,sBAAAY,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAN;AAAA,KAFpB;AAGK,IAAA,UAAU,EAAE;AAAA,UAAEC,IAAF,SAAEA,IAAF;AAAA,aACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACD,IAAZ,CADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQC,IAAI,CAACC,UAAL,CAAgBC,QAAxB,CAFA,EAGA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQF,IAAI,CAACC,UAAL,CAAgBE,SAAxB,CAHA,CADiB;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADK,GAcJ,IAhBH,CADF;AAqBD,CAvCD;AAyCA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, AsyncStorage, FlatList } from 'react-native';\n\nexport default ({navigation}) => {\n\n  const [puntos, setPuntos] = useState([])\n  const obtenerPuntos = async () => {\n    const obtenidos = await AsyncStorage.getItem('listaPuntos2')\n    const listaPuntos= JSON.parse(obtenidos)\n    if(listaPuntos !== null){\n      setPuntos(listaPuntos)\n    }\n  }\n\n  \n  console.log(puntos)\n\n  useEffect(() => {\n    obtenerPuntos()\n  }, [puntos])\n  \n  return (\n    <View style={styles.container}>\n      <Text>Pagina del Listado</Text>\n    {puntos ?\n      <>\n\t<FlatList \n      data={puntos} \n      keyExtractor={x => x.name}\n      renderItem={({item}) => \n\t<View>\n\t<Text>{item.name}</Text>\n\t<Text>\t{item.coordinate.latitude}</Text>\n\t<Text>\t{item.coordinate.longitude}</Text>\n\t</View>\n      }\n\t/>\n      </>\n      :null \n    }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}